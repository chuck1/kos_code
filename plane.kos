CLEARSCREEN.
CLEARVECDRAWS().

SAS OFF.
GEAR ON.
BRAKES ON.

SET pid_altitude TO PIDLOOP(1.0,0,10.0,-10,10).
SET pid_speed TO PIDLOOP(1.0,0,2.0,0,1).

FUNCTION runway_approach_direction {
	DECLARE PARAMETER runway_geo, runway_vector.
	set p to project_plane(runway_geo:POSITION,,UP:FOREVECTOR).
	set p_perp to project_plane(p,runway_vector).
	set p_para to p - p_perp.
	set a to VANG(p,runway_vector).
	set a to MIN(a * 5,90).
	set d TO p_perp:NORMALIZED * sin(a) + p_para:NORMALIZED * cos(a).
	return LOOKDIRUP(d,UP:VECTOR).
}
FUNCTION heading_dir {
	SET f TO SHIP:FACING:FOREVECTOR:NORMALIZED.
	SET h TO (f - VDOT(f,UP:FOREVECTOR) * UP:FOREVECTOR).
	RETURN LOOKDIRUP(h,UP:FOREVECTOR).
}
FUNCTION project_plane {
	DECLARE PARAMETER v,n.
	RETURN v - VDOT(v,n) * n.
}

FUNCTION arc_to_lng {
	DECLARE PARAMETER l, lat.
	RETURN l / (CONSTANT:DEGTORAD * SHIP:BODY:RADIUS * COS(lat)).
}

// KSC runway
// lat  -0.04852
// lng -74.72433
// heading 90

set ksc_runway_west TO latlng( -0.04852,-74.72433).

// stacks

set stack_alt TO stack().
stack_alt:push(ksc_runway_west:TERRAINHEIGHT).
stack_alt:push(ksc_runway_west:TERRAINHEIGHT+10).
stack_alt:push(ksc_runway_west:TERRAINHEIGHT+100).
stack_alt:push(ksc_runway_west:TERRAINHEIGHT+300).
stack_alt:push(ksc_runway_west:TERRAINHEIGHT+800).

set stack_speed TO stack().
stack_speed:push(0).
stack_speed:push(50).
stack_speed:push(50).
stack_speed:push(50).
stack_speed:push(80).

set stack_geo TO stack().
stack_geo:push(latlng(ksc_runway_west:lat,ksc_runway_west:lng + arc_to_lng(4000,0))).
stack_geo:push(ksc_runway_west).
stack_geo:push(latlng(ksc_runway_west:lat,ksc_runway_west:lng - arc_to_lng(2000,0))).
stack_geo:push(latlng(ksc_runway_west:lat,ksc_runway_west:lng - arc_to_lng(4000,0))).
stack_geo:push(latlng(ksc_runway_west:lat,ksc_runway_west:lng - arc_to_lng(8000,0))).

set stack_dist TO stack().

stack_dist:push(10).
stack_dist:push(200).
stack_dist:push(500).
stack_dist:push(1000).
stack_dist:push(1).

// inital

SET steer0 TO SHIP:FACING.

// conditions for changing target values

SET dist TO 0.

WHEN dist < stack_dist:PEEK() THEN {
	SET spot to stack_geo:POP().
	
	SET pid_altitude:SETPOINT TO stack_alt:POP().
	
	SET pid_speed:SETPOINT TO stack_speed:POP().
	
	LOCK dist TO spot:ALTITUDEPOSITION(pid_altitude:SETPOINT):MAG.
	
	LOCK steer0 TO LOOKDIRUP(project_plane(spot:POSITION,UP:FOREVECTOR),UP:FOREVECTOR).
	
	stack_dist:POP().
	
	IF NOT stack_alt:EMPTY {
		PRESERVE.
	}
}

// preloop

SET steer to steer0.
LOCK STEERING TO steer.
SET thrott to 0.
LOCK THROTTLE TO thrott.

// loop

UNTIL FALSE {
	WAIT 0.1.
	CLEARSCREEN.
	
	SET pitch TO pid_altitude:UPDATE(TIME:SECONDS,ALTITUDE).
	
	SET thrott TO pid_speed:UPDATE(TIME:SECONDS,SHIP:VELOCITY:SURFACE:MAG).
	
	SET steer TO ANGLEAXIS(-pitch,steer:STARVECTOR) * steer0.
	
	PRINT "plane".
	print "distnce         "+dist.
	print "target speed    "+pid_speed:SETPOINT.
	print "target altitude "+pid_altitude:SETPOINT.
	
	SET fv TO SHIP:FACING:FOREVECTOR.
	
	SET r TO SHIP:BODY:POSITION:NORMALIZED.
	
	SET hv TO (fv - VDOT(fv,r) * r:NORMALIZED):NORMALIZED.
	
	SET pv TO VCRS(r,hv):NORMALIZED.
	
}


STAGE.

LOCK THROTTLE TO 0.5.

LOCK STEERING TO HEADING(90,10).

UNTIL ALTITUDE > 100.

SET GEAR TO FALSE.

WAIT UNTIL ALTITUDE > 300.

LOCK STEERING TO HEADING(90,2).

WAIT 15.

SET h to 90.

LOCK STEERING TO HEADING(h,2).

UNTIL h > 270 {
	WAIT 0.1.
	SET h To h + 0.3.
	
	PRINT SHIP:FACING:YAW.
}

LOCK STEERING TO HEADING(270,0).


LOCK THROTTLE TO 0.

WAIT UNTIL FALSE.

